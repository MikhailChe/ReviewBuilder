// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReviewBuilder.Models;

namespace ReviewBuilder.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("ReviewBuilder.Models.Evaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ReviewFieldsId");

                    b.HasKey("Id");

                    b.HasIndex("ReviewFieldsId");

                    b.ToTable("Evaluation");
                });

            modelBuilder.Entity("ReviewBuilder.Models.FileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.Property<string>("Path");

                    b.Property<int?>("UserModelId");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId");

                    b.ToTable("FileModel");

                    b.HasDiscriminator<string>("Discriminator").HasValue("FileModel");
                });

            modelBuilder.Entity("ReviewBuilder.Models.ReviewFields", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChiefName");

                    b.Property<string>("Discipline");

                    b.Property<int?>("FieldFileModelId");

                    b.Property<string>("StudentGroup");

                    b.Property<string>("StudentName");

                    b.Property<string>("Theme");

                    b.HasKey("Id");

                    b.HasIndex("FieldFileModelId");

                    b.ToTable("ReviewFields");
                });

            modelBuilder.Entity("ReviewBuilder.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("builded");

                    b.Property<DateTime>("dt");

                    b.HasKey("Id");

                    b.ToTable("UserModel");
                });

            modelBuilder.Entity("ReviewBuilder.Models.FieldFileModel", b =>
                {
                    b.HasBaseType("ReviewBuilder.Models.FileModel");

                    b.Property<int?>("UserModelId1");

                    b.HasIndex("UserModelId1");

                    b.ToTable("FieldFileModel");

                    b.HasDiscriminator().HasValue("FieldFileModel");
                });

            modelBuilder.Entity("ReviewBuilder.Models.Evaluation", b =>
                {
                    b.HasOne("ReviewBuilder.Models.ReviewFields")
                        .WithMany("EvaluatonsSet")
                        .HasForeignKey("ReviewFieldsId");
                });

            modelBuilder.Entity("ReviewBuilder.Models.FileModel", b =>
                {
                    b.HasOne("ReviewBuilder.Models.UserModel")
                        .WithMany("buildFiles")
                        .HasForeignKey("UserModelId");
                });

            modelBuilder.Entity("ReviewBuilder.Models.ReviewFields", b =>
                {
                    b.HasOne("ReviewBuilder.Models.FieldFileModel")
                        .WithMany("reviewFields")
                        .HasForeignKey("FieldFileModelId");
                });

            modelBuilder.Entity("ReviewBuilder.Models.FieldFileModel", b =>
                {
                    b.HasOne("ReviewBuilder.Models.UserModel")
                        .WithMany("fieldFiles")
                        .HasForeignKey("UserModelId1");
                });
#pragma warning restore 612, 618
        }
    }
}
